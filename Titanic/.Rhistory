ggplot()+
geom_point(data=father.son, aes(x=fheight,y=sheight), size=0.2)+
geom_line(data=line, aes(x=x,y=y), color="red")
nrow(father.son)
X<-father.son$fheight
Y<-father.son$sheight
group<-c(1:1078)
newData<-data.frame(X,Y,group)
mean<-data.frame(X,X+1,group)
combineData<-rbind(newData,mean)
X<-father.son$fheight
Y<-father.son$sheight
group<-c(1:1078)
newData<-data.frame(X,Y,group)
mean<-data.frame(X,X+1,group)
combineData<-rbind(newData,mean)
mean<-data.frame(X,Y,group)
combineData<-rbind(newData,mean)
ggplot()+
geom_point(data=combineData, aes(x=X,y=Y), size=0.2)+
geom_line(data=line, aes(x=x,y=y), color="red")
ggplot()+
geom_point(data=combineData, aes(x=X,y=Y), size=0.2, color="blue")
ggplot()+
geom_point(data=combineData, aes(x=X,y=Y), size=0.2, color="blue")
geom_line(data=line, aes(x=x,y=y), color="red")
ggplot()+
geom_point(data=combineData, aes(x=X,y=Y), size=0.2, color="blue")
geom_line(data=combineData, aes(x=x,y=y,group=group), color="red")
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")
geom_line(data=combineData, aes(x=x,y=y,group=group), color="red")
X<-father.son$fheight
Y<-father.son$sheight
group<-c(1:1078)
newData<-data.frame(X,Y,group)
Y<-X+1
mean<-data.frame(X,Y,group)
combineData<-rbind(newData,mean)
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")
geom_line(data=combineData, aes(x=x,y=y,group=group), color="red")
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=combineData, aes(x=x,y=y,group=group), color="red")
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")
#geom_line(data=combineData, aes(x=x,y=y,group=group), color="red")
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")
geom_line(data=line, aes(x=x,y=y), color="blue")
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=x,y=y), color="blue")
head(combineData)
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=x,y=y), color="blue")+
geom_line(data=combineData, aes(x=x,y=y,group=group), color="blue")
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=x,y=y), color="blue")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="blue")
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=x,y=y), color="blue")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
#Finding Good Extimate by square of difference in Y
head(newData$Y)
head(mean$Y)
head(newData$Y - mean$Y)
head(mean$Y - newData$Y)
square<-(mean$Y - newData$Y)^2
sum(square)
lm(y~x,data=newData)
lm(Y~X,data=newData)
c<-33.8866
m<-0.5141
library(UsingR)
head(father.son)
library(ggplot2)
#iInding a Line which is teh mean of the datas.
line_x<-c(57,78)
line_y<-c(58,79)
line<-data.frame(line_x,line_y)
ggplot()+
geom_point(data=father.son, aes(x=fheight,y=sheight), size=0.2)+
geom_line(data=line, aes(x=x,y=y), color="red")
#line equation for above line
#x-x1/x2-x1 =y-y1/y2-y1
#x-60/75-60 = y-61/76-61
#x-60 = y-61 => y=x+1
X<-father.son$fheight
Y<-father.son$sheight
group<-c(1:1078)
newData<-data.frame(X,Y,group)
Y<-X+1
mean<-data.frame(X,Y,group)
#Bind the both data together
combineData<-rbind(newData,mean)
# Drawing distance between the actual value and the mean value positions.
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=x,y=y), color="blue")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
#Finding Good Extimate by square of difference in Y
head(newData$Y)
head(mean$Y)
head(mean$Y - newData$Y)
square<-(mean$Y - newData$Y)^2
sum(square) #8303.877 Called Residual
#Find the best fitting line which minimize the Residual
#R Leniar Model Method.
lm(Y~X,data=newData)
#Coefficients:
#   (Intercept)     X
#   33.8866       0.5141
c<-33.8866
m<-0.5141
y=
library(UsingR)
head(father.son)
library(ggplot2)
#iInding a Line which is teh mean of the datas.
line_x<-c(57,78)
line_y<-c(58,79)
line<-data.frame(line_x,line_y)
ggplot()+
geom_point(data=father.son, aes(x=fheight,y=sheight), size=0.2)+
geom_line(data=line, aes(x=line_x,y=line_y), color="red")
#line equation for above line
#x-x1/x2-x1 =y-y1/y2-y1
#x-60/75-60 = y-61/76-61
#x-60 = y-61 => y=x+1
X<-father.son$fheight
Y<-father.son$sheight
group<-c(1:1078)
newData<-data.frame(X,Y,group)
Y<-X+1
mean<-data.frame(X,Y,group)
#Bind the both data together
combineData<-rbind(newData,mean)
# Drawing distance between the actual value and the mean value positions.
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=x,y=y), color="blue")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
#Finding Good Extimate by square of difference in Y
head(newData$Y)
head(mean$Y)
head(mean$Y - newData$Y)
square<-(mean$Y - newData$Y)^2
sum(square) #8303.877 Called Residual
#Find the best fitting line which minimize the Residual
#R Leniar Model Method.
lm(Y~X,data=newData)
#Coefficients:
#   (Intercept)     X
#   33.8866       0.5141
c<-33.8866
m<-0.5141
y=
library(UsingR)
head(father.son)
library(ggplot2)
#iInding a Line which is teh mean of the datas.
line_x<-c(57,78)
line_y<-c(58,79)
line<-data.frame(line_x,line_y)
ggplot()+
geom_point(data=father.son, aes(x=fheight,y=sheight), size=0.2)+
geom_line(data=line, aes(x=line_x,y=line_y), color="red")
#line equation for above line
#x-x1/x2-x1 =y-y1/y2-y1
#x-60/75-60 = y-61/76-61
#x-60 = y-61 => y=x+1
X<-father.son$fheight
Y<-father.son$sheight
group<-c(1:1078)
newData<-data.frame(X,Y,group)
Y<-X+1
mean<-data.frame(X,Y,group)
#Bind the both data together
combineData<-rbind(newData,mean)
# Drawing distance between the actual value and the mean value positions.
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
#Finding Good Extimate by square of difference in Y
head(newData$Y)
head(mean$Y)
head(mean$Y - newData$Y)
square<-(mean$Y - newData$Y)^2
sum(square) #8303.877 Called Residual
#Find the best fitting line which minimize the Residual
#R Leniar Model Method.
lm(Y~X,data=newData)
#Coefficients:
#   (Intercept)     X
#   33.8866       0.5141
c<-33.8866
m<-0.5141
line_y<-m*line_x+c
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
newLine<-data.frame(line_x, line_y)
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=newLine, aes(x=line_x,y=line_y), color="orange")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
X<-mean$X
Y<-m*mean$X*c
newMean<-data.frame(X,Y, group)
combineData<-rbind(newData,newMean)
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=newLine, aes(x=line_x,y=line_y), color="orange")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
lm(Y~X,data=newData)
#Coefficients:
#   (Intercept)     X
#   33.8866       0.5141
c<-33.8866
m<-0.5141
library(UsingR)
head(father.son)
library(ggplot2)
#iInding a Line which is teh mean of the datas.
line_x<-c(57,78)
line_y<-c(58,79)
line<-data.frame(line_x,line_y)
ggplot()+
geom_point(data=father.son, aes(x=fheight,y=sheight), size=0.2)+
geom_line(data=line, aes(x=line_x,y=line_y), color="red")
#line equation for above line
#x-x1/x2-x1 =y-y1/y2-y1
#x-60/75-60 = y-61/76-61
#x-60 = y-61 => y=x+1
X<-father.son$fheight
Y<-father.son$sheight
group<-c(1:1078)
newData<-data.frame(X,Y,group)
Y<-X+1
mean<-data.frame(X,Y,group)
#Bind the both data together
combineData<-rbind(newData,mean)
# Drawing distance between the actual value and the mean value positions.
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
#Finding Good Extimate by square of difference in Y
head(newData$Y)
head(mean$Y)
head(mean$Y - newData$Y)
square<-(mean$Y - newData$Y)^2
sum(square) #8303.877 Called Residual
#Find the best fitting line which minimize the Residual
#R Leniar Model Method.
lm(Y~X,data=newData)
#Coefficients:
#   (Intercept)     X
#   33.8866       0.5141
c<-33.8866
m<-0.5141
#y=m*x+c  Equation of a line
line_y<-m*line_x+c
newLine<-data.frame(line_x, line_y)
# Drawing distance between the actual value and the mean value positions.
X<-mean$X
Y<-m*mean$X*c
newMean<-data.frame(X,Y, group)
combineData<-rbind(newData,newMean)
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=newLine, aes(x=line_x,y=line_y), color="orange")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
library(UsingR)
head(father.son)
library(ggplot2)
#iInding a Line which is teh mean of the datas.
line_x<-c(57,78)
line_y<-c(58,79)
line<-data.frame(line_x,line_y)
ggplot()+
geom_point(data=father.son, aes(x=fheight,y=sheight), size=0.2)+
geom_line(data=line, aes(x=line_x,y=line_y), color="red")
X<-father.son$fheight
Y<-father.son$sheight
group<-c(1:1078)
newData<-data.frame(X,Y,group)
X<-father.son$fheight
Y<-father.son$sheight
group<-c(1:1078)
newData<-data.frame(X,Y,group)
Y<-X+1
mean<-data.frame(X,Y,group)
Y<-X+1
mean<-data.frame(X,Y,group)
#Bind the both data together
combineData<-rbind(newData,mean)
# Drawing distance between the actual value and the mean value positions.
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
head(newData$Y)
head(mean$Y)
head(newData$Y)
head(mean$Y)
head(mean$Y - newData$Y)
square<-(mean$Y - newData$Y)^2
sum(square) #8303.877 Called Residual
head(newData)
lm(Y~X,data=newData)
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=newLine, aes(x=line_x,y=line_y), color="orange")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
X<-mean$X
Y<-m*X+*c
newMean<-data.frame(X,Y, group)
combineData<-rbind(newData,newMean)
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=newLine, aes(x=line_x,y=line_y), color="orange")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
Y<-m*X+c
X<-mean$X
Y<-m*X+c
newMean<-data.frame(X,Y, group)
newCombineData<-rbind(newData,newMean)
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=newLine, aes(x=line_x,y=line_y), color="orange")+
geom_line(data=newCombineData, aes(x=X,y=Y,group=group), color="green")
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=newLine, aes(x=line_x,y=line_y), color="red")+
geom_line(data=newCombineData, aes(x=X,y=Y,group=group), color="green")
library(UsingR)
head(father.son)
library(ggplot2)
#iInding a Line which is teh mean of the datas.
line_x<-c(57,78)
line_y<-c(58,79)
line<-data.frame(line_x,line_y)
ggplot()+
geom_point(data=father.son, aes(x=fheight,y=sheight), size=0.2)+
geom_line(data=line, aes(x=line_x,y=line_y), color="red")
#line equation for above line
#x-x1/x2-x1 =y-y1/y2-y1
#x-60/75-60 = y-61/76-61
#x-60 = y-61 => y=x+1
X<-father.son$fheight
Y<-father.son$sheight
group<-c(1:1078)
newData<-data.frame(X,Y,group)
Y<-X+1
mean<-data.frame(X,Y,group)
#Bind the both data together
combineData<-rbind(newData,mean)
# Drawing distance between the actual value and the mean value positions.
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
#Finding Good Extimate by square of difference in Y
head(newData$Y)
head(mean$Y)
head(mean$Y - newData$Y)
square<-(mean$Y - newData$Y)^2
sum(square) #8303.877 Called Residual
#Find the best fitting line which minimize the Residual
#R Leniar Model Method.
lm(Y~X,data=newData)
#Coefficients:
#   (Intercept)     X
#   33.8866       0.5141
c<-33.8866
m<-0.5141
#y=m*x+c  Equation of a line
line_y<-m*line_x+c
newLine<-data.frame(line_x, line_y)
# Drawing distance between the actual value and the mean value positions.
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=newLine, aes(x=line_x,y=line_y), color="orange")+
geom_line(data=combineData, aes(x=X,y=Y,group=group), color="green")
# Drawing distance between the actual value and the mean value positions.
X<-mean$X
Y<-m*X+c
newMean<-data.frame(X,Y, group)
newCombineData<-rbind(newData,newMean)
ggplot()+
geom_point(data=newData, aes(x=X,y=Y), size=0.2, color="black")+
geom_point(data=mean, aes(x=X,y=Y), size=0.2, color="red")+
geom_line(data=line, aes(x=line_x,y=line_y), color="blue")+
geom_line(data=newLine, aes(x=line_x,y=line_y), color="red")+
geom_line(data=newCombineData, aes(x=X,y=Y,group=group), color="green")
ggplot()+
geom_line(data=newLine, aes(x=line_x,y=line_y), color="red")
y<- 0.5141*70+33.8866
y
setwd("D:\\Study\\R\\R-Studies\\Titanic")
test <- read.csv("test.csv", header = TRUE)
train <- read.csv("train.csv", header = TRUE)
test.survived <- data.frame(Survived = rep("None", nrow(test)), test[,])
data.combined <- rbind(train, test.survived)
data.combined$Survived <- as.factor(data.combined$Survived)
data.combined$Pclass <- as.factor(data.combined$Pclass)
library(ggplot2)
train$Pclass <- as.factor(train$Pclass)
#Survival Graph Based on Class.
ggplot(train, aes(x = Pclass, fill = factor(Survived))) +
geom_bar(width = 0.5) +
xlab("Pclass") +
ylab("Total Count") +
labs(fill="Survived")
head(as.character(train$Name))
length(unique(as.character(data.combined$Name)))
str(train)
library(stringr)
misses <- data.combined[which(str_detect(data.combined$Name,"Miss.")),]
misses[1:5,]
mrses  <- data.combined[which(str_detect(data.combined$Name,"Mrs.")),]
mrses[1:5,]
males  <- data.combined[which(train$Sex == "male"),]
males[1:5,]
#data.combined <- data.frame(Survived = rep("None", nrow(data.combined)), data.combined[,])
extractTitle <- function(name){
if(length(grep("Miss.", name))>0){
return ("Miss.")
}else if(length(grep("Master.", name))>0){
return ("Master.")
}else if(length(grep("Mrs.", name))>0){
return ("Mrs.")
}else if(length(grep("Mr.", name))>0){
return ("Mr.")
}else{
return("Other")
}
}
titles <- NULL
for(i in 1:nrow(data.combined)){
titles <- c(titles, extractTitle(data.combined[i,"Name"]))
}
data.combined$title <- as.factor(titles)
#Survival Graph Based on Gender.
ggplot(data.combined[1:891,], aes(x = title, fill = factor(Survived))) +
geom_bar(width = 0.5) +
facet_wrap(~Pclass)+
ggtitle("Pclass" )+
xlab("Title") +
ylab("Total Count") +
labs(fill="~Survived")
table(data.combined$Sex)
table(data.combined$Survived)
#Survival Graph Based on Gender.
ggplot(data.combined[1:891,], aes(x = Age, fill = factor(Survived))) +
geom_histogram() +
facet_wrap(~Sex + Pclass)+
ggtitle("Pclass" )+
xlab("Title") +
ylab("Total Count") +
labs(fill="~Survived")
boys <- data.combined[which(data.combined$title == "Master."),]
summary(misses)
misses.alone <- misses[which(misses$SibSp ==0 & misses$Parch == 0),]
summary(misses.alone$Age)
#Number of Womens travelling age les than 14.5 is 4
length(which(misses.alone$Age <= 14.5))
df <- data.frame(
gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30)
)
ds <- plyr::ddply(df, "gp", plyr::summarise, mean = mean(y), sd = sd(y))
